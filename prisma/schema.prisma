// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String

  // relationships
  credentials   Credentials[]
  securityNotes SecurityNotes[]
  cards         Cards[]
  wifi          Wifi[]
  token         Token[]

  @@map("user")
}

model Credentials {
  id       Int    @id @default(autoincrement())
  title    String @unique @db.VarChar(50)
  userName String
  password String
  url      String
  userId   Int

  userRelarionship User @relation(fields: [userId], references: [id])

  @@map("credentials")
}

model SecurityNotes {
  id      Int    @id @default(autoincrement())
  title   Int    @unique
  content String @db.VarChar(1000)
  userId  Int

  user User @relation(fields: [userId], references: [id])

  @@map("securityNotes")
}

enum CardTypes {
  credit
  debit
  both
}

model Cards {
  id             Int       @id @default(autoincrement())
  title          String    @unique
  cardNumber     String
  printedName    String
  cvv            String
  expirationDate String
  password       String
  isVirtual      Boolean
  type           CardTypes
  userId         Int

  user User @relation(fields: [userId], references: [id])

  @@map("cards")
}

model Wifi {
  id          Int    @id @default(autoincrement())
  title       String @unique
  networkName String
  password    String
  userId      Int

  user User @relation(fields: [userId], references: [id])

  @@map("wifi")
}

model Token {
  id     Int  @id @default(autoincrement())
  userId Int
  user   User @relation(fields: [userId], references: [id])

  @@map("token")
}
